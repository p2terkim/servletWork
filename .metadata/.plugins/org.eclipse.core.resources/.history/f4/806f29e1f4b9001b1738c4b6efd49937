package kr.or.ddit.basic.fileupload;

import java.io.File;
import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.MultipartConfig;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/*
 	- Servlet 3.0이상에서 파일 업로드를 처리하려면 서블릿에 @MultipartConfig 어노테이션을 설정해야한다.
 			(Servlet3.0 이하에서는 따로 라이브러리를 추가했어야했다.)
 	- @MultipartConfig 어노테이션에서 설정할 변수
 			* fileSizeTreshold : 이 크기가 넘으면 디스크의 임시 디렉토리에 저장된다.(임시 기억장소 크기로 생각하면된다.)
 								(단위 : byte, 기본값 : 0 (무조건 임시디렉토리에 저장))
 			* maxFileSize : 한 개 파일의 최대 크기 (단위 : byte, 기본값 : -1L (무제한))
 			* maxRequestSize : 서버로 전송되는 Request데이터의 최대 크기
 								(단위 : byte, 기본값 : -1L (무제한))
 			* location : Part.write()메서드를 통해서 파일을 저장할 디렉토리 : (기본값 : "")
 			* 
 			* ** 크기 설정은 환경에 따라 적절하게 정해서...
*/


@WebServlet("/file/FileUpload.do")
@MultipartConfig(fileSizeThreshold = 1024 * 1024 * 10, maxFileSize = 1024 * 1024 * 30,
					maxRequestSize = 1024 * 1024 * 50)
public class FileUploadServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
   
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		//사용자가 업로드한 파일이 저장될 서버쪽의 폴더 경로 설정
		String uploadPath = "d:/d_other/uploadFiles";
		
		File fileUploadDir = new File(uploadPath);
		
		//저장될 폴더가 없으면 새로 생성한다.
		if(!fileUploadDir.exists()) {
			fileUploadDir.mkdirs();
		}
		
		//------------------------------------------------------
		
		//파일이 아닌 데이터는 getParameter()메서드나 getParameterValues()메서드를 이용해서 구한다.
		request.setCharacterEncoding("utf-8");
		String memId = request.getParameter("memid");
		
		
	}

}
