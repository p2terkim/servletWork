package kr.or.ddit.basic.fileupload;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.OutputStream;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class FileDownload
 */
@WebServlet("/file/FileDownload.do")
public class FileDownload extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		request.setCharacterEncoding("utf-8");
		
		String uploadPath = "d:/d_other/uploadFiles";
		
		String fileName = request.getParameter("fileName");
		
		String filePath = uploadPath + File.separator + fileName;
		
		File file = new File(filePath);
		
		OutputStream out = null;
		FileInputStream fin = null;
		
		if(file.exists()) {
			
			//Download를 위한 Content-Type 설정
			response.setContentType("application/octet-stream; charstet=utf-8");
			
			//Response 객체의 Header에 Content-Disposition속성을 설정한다.
			String headerKey = "Content-Disposition";
			String headerValue = "attachment; filename=\"" + file.getName() +"\"";
			
			response.setHeader(headerKey, headerValue);
			
			try {
				//출력용 스트림 객체 생성 ==> Response 객체를 이용해서 구한다.
				out = response.getOutputStream();
				
				//파일 입력용 스트림 객체 생성
				fin = new FileInputStream(file);
				byte[] temp = new byte[8192];
				int len = 0;
				
				//byte배열을 이용해서 파일 내용을 읽어와 출력용 스트림으로 출력한다.
				while((len=fin.read(temp)) > 0) {
					out.write(temp, 0, len);
				}
				
				out.flush();
				
			} catch ( IOException e) {
				System.out.println("입출력 오류 : " + e.getMessage());
			} finally {
				if(fin != null) fin.close();
				if(out != null) out.close();
			}
		}
		
	}
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		doGet(request, response);
	}

}
